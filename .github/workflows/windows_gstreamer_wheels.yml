name: Gstreamer wheels

on:
  push:
    branches:
      - master
      - windows_ci
    paths:
      - 'win/common.py'
      - 'win/gstreamer.py'
      - '.github/workflows/windows_gstreamer_wheels.yml'

env:
  SERVER_IP: '159.203.106.198'
  KIVY_BUILD_DIR: kivy_build
  KIVY_BUILD_CACHE: kivy_build_cache
  PACKAGE_TARGET: gstreamer
  PYTHONPATH: .


jobs:
  prepare_cache:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: ['x64', 'x86']
    env:
      PACKAGE_ARCH: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Cache deps
        uses: actions/cache@v1
        with:
          path: kivy_build_cache
          key: cache-packages-gstreamer-${{ matrix.arch }}-${{ hashFiles('win/gstreamer.py') }}
      - name: Prepare Environment
        run: |
          . .\ci\windows_ci.ps1
          Prepre-env
      - name: Download Dependencies
        run: |
          . .\ci\windows_ci.ps1
          Download-Packages

  windows_wheels:
    runs-on: windows-latest
    needs: prepare_cache
    strategy:
      fail-fast: false
      matrix:
        python: [ '3.7', '3.8', '3.9', '3.10', '3.11' ]
        arch: ['x64', 'x86']
    env:
      PACKAGE_ARCH: ${{ matrix.arch }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
    - name: Cache deps
      uses: actions/cache@v1
      with:
        path: kivy_build_cache
        key: cache-packages-gstreamer-${{ matrix.arch }}-${{ hashFiles('win/gstreamer.py') }}
    - name: Prepare Environment
      run: |
        . .\ci\windows_ci.ps1
        Prepre-env
    - name: Install lessmsi
      run: choco install lessmsi
    - name: Build package
      run: |
        . .\ci\windows_ci.ps1
        Create-Packages
    - name: Upload wheels as artifact
      uses: actions/upload-artifact@master
      with:
        name: gstreamer_wheels
        path: dist
    - name: Install MSYS2
      run: choco install msys2
    - name: Upload wheels to server
      if: contains(github.event.head_commit.message, '[publish gstreamer win]')
      env:
        UBUNTU_UPLOAD_KEY: ${{ secrets.UBUNTU_UPLOAD_KEY }}
        MSYSTEM: MINGW64
        CHERE_INVOKING: 1
      run: |
        . .\ci\windows_ci.ps1
        Upload-windows-wheels-to-server -ip "$env:SERVER_IP"
    - name: Publish to PyPI
      if: contains(github.event.head_commit.message, '[publish gstreamer win]')
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: |
        twine upload --non-interactive dist/*
    - name: Test package
      run: |
        . .\ci\windows_ci.ps1
        Test-kivy
